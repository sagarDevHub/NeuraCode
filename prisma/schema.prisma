generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  /// Field referred in an index, but found no data to define the type.
  provider          Json?
  /// Field referred in an index, but found no data to define the type.
  providerAccountId Json?
  /// Field referred in an index, but found no data to define the type.
  user_id           Json?

  @@unique([provider, providerAccountId])
  @@index([user_id])
}

model Playground {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model User {
  id            String   @id @map("_id")
  createdAt     DateTime @db.Date
  email         String   @unique
  /// Could not determine type: the field only had null or empty values in the sample set.
  emailVerified Json?
  image         String
  name          String
  role          String
  updatedAt     DateTime @db.Date
}

model accounts {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  access_token      String
  expires_at        BigInt?
  id_token          String?
  provider          String
  providerAccountId String
  scope             String
  token_type        String
  type              String
  userId            String  @db.ObjectId

  @@unique([provider, providerAccountId])
}

model playgrounds {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model sessions {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  /// Field referred in an index, but found no data to define the type.
  sessionToken Json?  @unique
}

model users {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt     DateTime @db.Date
  email         String   @unique
  /// Could not determine type: the field only had null or empty values in the sample set.
  emailVerified Json?
  image         String
  name          String
  role          String
  updatedAt     DateTime @db.Date
}

model verificationtokens {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  /// Field referred in an index, but found no data to define the type.
  identifier Json?
  /// Field referred in an index, but found no data to define the type.
  token      Json?  @unique

  @@unique([identifier, token])
}
